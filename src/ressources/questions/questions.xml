<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<questions>

<question niveau="1">
    <text>
    	Dans une pile, le dernier arrivé est<choix></choix>

    </text>
    <reponse rep="true">
    	le premier sorti
    </reponse>
        <reponse rep="false">
    	le dernier sorti
    </reponse>
        <reponse rep="false">
    	On ne sait pas
    </reponse>
       
</question>

<question niveau="1">
    <text>
    	Dans une file, le dernier arrivé est
    </text>
    <reponse rep="false">
    	le premier sorti
    </reponse>
        <reponse rep="true">
    	le dernier sorti
    </reponse>
        <reponse rep="false">
    	On ne sait pas
    </reponse>   
</question>

<question niveau="1">
    <text>
    	L'ajout d'un élément à une pile à une complexité de
    </text>
    <reponse rep="true">
    	O(1)
    </reponse>
    <reponse rep="false">
    O(n)
    </reponse>
    <reponse rep="false">
    O(log2(n))
    </reponse>
	
       
</question>
<question niveau="1">
    <text>
    	L'accès dans le pire des cas à une donnée dans une table de hachage 
	a une complexité de<choix></choix>

    </text>
    <reponse rep="false">
    	O(1)
    </reponse>
        <reponse rep="true">
    O(n)
    </reponse>
        <reponse rep="false">
    O(n²)
    </reponse>
	
       
</question>
<question niveau="1">
    <text>
    	La complexite moyenne d'un tri rapide est de<choix></choix>

    </text>
    <reponse rep="false">
    	O(1)
    </reponse>
        <reponse rep="false">
    O(n)
    </reponse>
        <reponse rep="true">
   O(nlog(n))
    </reponse>
	
       
</question>
<question niveau="1">
    <text>
    	Une fractale est obtenue grâce à<choix></choix>

    </text>
    <reponse rep="true">
    un algorithme récursif
    </reponse>
        <reponse rep="false">
    un algorithme réparti
    </reponse>
        <reponse rep="false">
un algorithme émergeant
    </reponse>
	
       
</question>
<question niveau="1">
    <text>
    	Dans un arbre binaire, la clé droite est<choix></choix>

    </text>
    <reponse rep="true">
    supérieure à la clé gauche
    </reponse>
        <reponse rep="false">
    inférieure à la clé gauche
    </reponse>
        <reponse rep="false">
	on ne sait pas
    </reponse>
	
</question>
<question niveau="1">
    <text>
    	La complexité moyenne d'une recherche dans un arbre binaire est de<choix></choix>

    </text>
    <reponse rep="false">
   O(n)
    </reponse>
        <reponse rep="false">
   O(n/2)
    </reponse>
        <reponse rep="true">
	O(log(n))
    </reponse>
	
</question>
<question niveau="1">
    <text>
    Un arbre est équilibré si<choix></choix>

    </text>
    <reponse rep="false">
   il a autant de feuille d'un côté que de l'autre
    </reponse>
        <reponse rep="true">
   tous ses sous arbres sont équilibrés
    </reponse>
        <reponse rep="false">
	il a autant de noeud d'un côté que de l'autre
    </reponse>
	
</question>
<question niveau="1">
    <text>
    La hauteur d'un arbre est<choix></choix>

    </text>
    <reponse rep="true">
 la distance entre la feuille la plus éloignée et la racine
    </reponse>
        <reponse rep="false">
  la distance entre la feuille la moins éloignée et la racine
    </reponse>
        <reponse rep="false">
	le nombre de noeud
    </reponse>
	
</question>


<question niveau="2">
    <text>
   	On a un ensemble de valeurs suivant une loi uniforme discrète. 
   	Le tri le plus efficace sera:<choix></choix>

    </text>
    <reponse rep="false">
le tri rapide
    </reponse>
        <reponse rep="false">
le tri fusion
    </reponse>
        <reponse rep="true">
le tri par comptage
		</reponse>
	
</question>

<question niveau="2">
    <text>
   	On veut écrire un algorithme qui vérifie qu'un document est bien parenthèsé. 
	Pour cela, on utilisera<choix></choix>

    </text>
    <reponse rep="true">
une pile
    </reponse>
        <reponse rep="false">
une file   
 </reponse>
        <reponse rep="false">
une table de hachage
		</reponse>
	
</question>

<question niveau="2">
    <text>
  Parmi ces 3 fonctions, laquelle est la meilleure fonction de hachage?<choix></choix>

    </text>
    <reponse rep="false">
f(x)=2x²+5
    </reponse>
        <reponse rep="false">
f(x)=1  
 </reponse>
        <reponse rep="true">
f(x)=x[m], avec m un entier premier
		</reponse>
	
</question>

<question niveau="2">
    <text>
 	On ajoute dans l'ordre a,b,c,d,e,f,g à une pile. On dépile esuite deux fois. 
	Quel sera le prochain caractère à être dépilé?<choix></choix>

    </text>
    <reponse rep="false">
c
    </reponse>
        <reponse rep="true">
e
 </reponse>
        <reponse rep="false">
f
		</reponse>
	
</question>


<question niveau="2">
    <text>
 	On ajoute dans l'ordre a,b,c,d,e,f,g à une file. 
	On dépile esuite deux fois. 
	Quel sera le prochain caractère à être dépilé?<choix></choix>

    </text>
    <reponse rep="true">
c
    </reponse>
        <reponse rep="false">
e
 </reponse>
        <reponse rep="false">
f
		</reponse>
	
</question>



<question niveau="2">
    <text>
 	On ajoute dans l'ordre a, b, c, d, f. 
	On dépile 2 fois et on obtient c. 
	La structure de donnée est<choix></choix>

    </text>
    <reponse rep="false">
une file
    </reponse>
        <reponse rep="false">
une pile
 </reponse>
        <reponse rep="true">
on ne sait pas
		</reponse>
	
</question>


<question niveau="2">
    <text>
 	On ajoute dans l'ordre à un arbre binaire 4,1,5,7,6,2,3. 
	L'arbre est-il équilibré?<choix></choix>

    </text>
    <reponse rep="false">
oui
    </reponse>
        <reponse rep="true">
non
 </reponse>
        <reponse rep="false">
on ne sait pas
		</reponse>
	
</question>


<question niveau="2">
    <text>
 	On ajoute dans l'ordre à un arbre binaire 4,1,5,7,6,2,3,9,10,11. 
	Qu'elle est la hauteur de l'arbre?<choix></choix>

    </text>
    <reponse rep="true">
6
    </reponse>
        <reponse rep="false">
3
 </reponse>
        <reponse rep="false">
10
		</reponse>
	
</question>


<question niveau="2">
    <text>
	On enfile a,b,v,c,s,d dans une file. 
	Quel sera le premier défilé?<choix></choix>

    </text>
    <reponse rep="true">
a
    </reponse>
        <reponse rep="false">
d
 </reponse>
        <reponse rep="false">
on ne sait pas
		</reponse>
	
</question>


<question niveau="3">
    <text>
	On ajoute dans dans une table de hachage les couples(1;clou) et (2;masse). 
	On parcours la table: Quelle sera la première valeur parcourue?<choix></choix>

    </text>
    <reponse rep="true">
clou
    </reponse>
        <reponse rep="false">
masse
 </reponse>
        <reponse rep="false">
on ne sait pas
		</reponse>
	
</question>
<question niveau="3">
    <text>
    	Qu'est-ce qu'un algorithme ?

    </text>
    <reponse rep="false">
    	Un problème de décision
    </reponse>
        <reponse rep="true">
    	Une méthode ou un procédé décrit pas à pas
    </reponse>
        <reponse rep="false">
    	Un langage de programmation
    </reponse>
        <reponse rep="false">
    	Un code numérique
    </reponse>
</question>

<question niveau="3">
    <text>
    	Qu'y a-t-il de commun entre une recette de cuisine et un algorithme ?
    </text>
    <reponse rep="false">
    	On peut les appliquer comme des théorèmes
    </reponse>
        <reponse rep="false">
    	Aucun point commun, une recette n'a rien de mathématique
    </reponse>
        <reponse rep="false">
    	Appliquez-les et dans tous les cas, vous obtiendrez un bon résultat
    </reponse>
        <reponse rep="true">
    	Il s'agit d'une suite d'instructions
    </reponse>
</question>

<question niveau="3">
    <text>
    	Comment se définit la complexité en temps d'un algorithme 
	calculant un résultat à partir d'un paramètre fourni ?
    </text>
    <reponse rep="false">
    	Elle est en général indépendante de la taille de son paramètre d'entrée
    </reponse>
        <reponse rep="false">
    	C'est le temps en milli-secondes de son exécution sur un processeur Pentium
    </reponse>
        <reponse rep="true">
    	C'est l'ordre de grandeur du nombre d'opérations de base effectuées 
	lors de l'exécution de l'algorithme en fonction de la taille de 
	son paramètre d'entrée
    </reponse>
        <reponse rep="false">
    	C'est le nombre exact d'opérations de base effectuées 
	lors de l'exécution de l'algorithme en fonction de la taille 
	de son paramètre d'entrée
    </reponse>
</question>

<question niveau="3">
    <text>
    	Comment peut-on trier par ordre alphabétique un fichier de 1000 noms ?
    </text>
    <reponse rep="false">
    	Il existe un seul algorithme
    </reponse>
        <reponse rep="false">
    	 Il existe plusieurs algorithmes, 
	dont certains sont plus rapides à exécuter dans tous les cas
    </reponse>
        <reponse rep="true">
    	Il existe plusieurs algorithmes, 
	dont certains sont plus rapides à exécuter en moyenne
    </reponse>
        <reponse rep="false">
    	Aucun algorithme ne peut trier 1000 noms
    </reponse>
</question>

<question niveau="3">
    <text>
    	Qu'est-ce qu'un arbre ?
    </text>
    <reponse rep="false">
    	Un réseau ad hoc
    </reponse>
        <reponse rep="true">
    	Une structure de données permettant de représenter 
	de façon compacte les éléments d'un ensemble
    </reponse>
        <reponse rep="false">
    	Un modèle de calcul de croissance des plantes
    </reponse>
        <reponse rep="false">
    	Une instruction d'un langage informatique
    </reponse>
</question>

<question niveau="3">
    <text>
    	Quel type de tri n'existe pas ?
    </text>
    <reponse rep="false">
    	Le tri fusion
    </reponse>
        <reponse rep="false">
    	Le tri rapide
    </reponse>
        <reponse rep="false">
    	Le tri par insertion
    </reponse>
        <reponse rep="true">
    	Le tri par déduction
    </reponse>
</question>

<question niveau="3">
    <text>
    	Dans un arbre, quel est le sens d'un parcours postfixe ?
    </text>
    <reponse rep="false">
    	Fils gauche - Racine - Fils droite
    </reponse>
        <reponse rep="false">
    	Fils droite - Racine - Fils gauche
    </reponse>
        <reponse rep="false">
    	Racine - Fils gauche - Fils droite
    </reponse>
        <reponse rep="true">
    	Fils gauche - Fils droit - Racine
    </reponse>
</question>

<question niveau="3">
    <text>
    	Dans un arbre, quel est le sens d'un parcours infixe ?
    </text>
    <reponse rep="true">
    	Fils gauche - Racine - Fils droite
    </reponse>
        <reponse rep="false">
    	Fils droite - Racine - Fils gauche
    </reponse>
        <reponse rep="false">
    	Racine - Fils gauche - Fils droite
    </reponse>
        <reponse rep="false">
    	Fils gauche - Fils droit - Racine
    </reponse>
</question>

<question niveau="3">
    <text>
    	Dans un arbre, quel est le sens d'un parcours préfixe ?
    </text>
    <reponse rep="false">
    	Fils gauche - Racine - Fils droite
    </reponse>
        <reponse rep="false">
    	Fils droite - Racine - Fils gauche
    </reponse>
        <reponse rep="true">
    	Racine - Fils gauche - Fils droite
    </reponse>
        <reponse rep="false">
    	Fils gauche - Fils droit - Racine
    </reponse>
</question>

<question niveau="4">
    <text>
    	Parmi ces propositions, laquelle est une structure de données élémentaire ?
    </text>
    <reponse rep="true">
    	La file à priorité
    </reponse>
        <reponse rep="false">
    	La pile à priorité
    </reponse>
        <reponse rep="false">
    	Le vecteur à priorité
    </reponse>
        <reponse rep="false">
    	La liste à priorité
    </reponse>
</question>

<question niveau="4">
    <text>
    	Lequel de ces arbres n'existe pas ?
    </text>
    <reponse rep="false">
    	L'arbre binaire de recherche
    </reponse>
        <reponse rep="true">
    	L'arbre binaire équilibré
    </reponse>
        <reponse rep="false">
    	Arbre équilibré
    </reponse>
        <reponse rep="false">
    	Arbre AVL
    </reponse>
</question>
 
<question niveau="4">
    <text>
    	Quelle est la prochaine étape d'un tri par 
	séléction pour la suite suivante : 2-4-3-1 ?
    </text>
    <reponse rep="false">
    	1-2-4-3
    </reponse>
        <reponse rep="true">
    	1-4-3-2
    </reponse>
        <reponse rep="false">
    	1-2-3-4
    </reponse>
        <reponse rep="false">
    	4-2-3-1
    </reponse>
</question>

<question niveau="4">
    <text>
    	Quelle est la prochaine étape d'un tri par 
	insertion pour la suite suivante : 2-4-3-1 ?
    </text>
    <reponse rep="true">
    	1-2-4-3
    </reponse>
        <reponse rep="false">
    	1-4-3-2
    </reponse>
        <reponse rep="false">
    	1-2-3-4
    </reponse>
        <reponse rep="false">
    	2-3-4-1
    </reponse>
</question>

<question niveau="4">
    <text>
    	Quelle est la prochaine étape d'un tri à bulle 
	pour la suite suivante : 1-4-5-2-8 ?
    </text>
    <reponse rep="false">
    	1-4-5-8-2
    </reponse>
        <reponse rep="false">
    	1-2-4-5-8
    </reponse>
        <reponse rep="false">
    	1-4-5-2-8
    </reponse>
        <reponse rep="true">
    	1-4-2-5-8
    </reponse>
</question>

<question niveau="4">
    <text>
    	Pour un tableau de longueur 3, la complexité du tri par tas est :
    </text>
    <reponse rep="false">
    	O(3)
    </reponse>
        <reponse rep="false">
    	O(log(3))
    </reponse>
        <reponse rep="true">
    	O(3log(3))
    </reponse>
        <reponse rep="false">
    	O(1)
    </reponse>
</question>

<question niveau="4">
    <text>
    	la méthode sommet() appartient à :
    </text>
    <reponse rep="false">
    	la file
    </reponse>
        <reponse rep="true">
    	la pile
    </reponse>
        <reponse rep="false">
    	aux deux
    </reponse>
        <reponse rep="false">
    	aucune de ces deux structures
    </reponse>
</question>

<question niveau="4">
    <text>
    	la méthode tete() appartient à :
    </text>
    <reponse rep="true">
    	la file
    </reponse>
        <reponse rep="false">
    	la pile
    </reponse>
        <reponse rep="false">
    	aux deux
    </reponse>
        <reponse rep="false">
    	aucune de ces deux structures
    </reponse>
</question>

<question niveau="4">
    <text>
    	Une récursive terminale signifie que :
    </text>
    <reponse rep="false">
    	il s'agit de la dernière récursive de la classe
    </reponse>
        <reponse rep="true">
    	on ne peut effectuer de calcul derrière la récursive
    </reponse>
        <reponse rep="false">
    	il est impossible de la convertir en fonction non récursive
    </reponse>
</question>

<question niveau="4">
    <text>
    	Une fonction récursive peut être écrite en fonction itérative :
    </text>
    <reponse rep="false">
    	oui
    </reponse>
        <reponse rep="true">
    	non
    </reponse>
        <reponse rep="false">
    	on ne sait pas
    </reponse>
</question>

<question niveau="5">
    <text>
    	Lors de condition, il prend moins de mémoire d'utiliser :
    </text>
    <reponse rep="true">
    	un switch
    </reponse>
        <reponse rep="false">
    	un if
    </reponse>
        <reponse rep="false">
    	les deux vont à la même vitesse
    </reponse>
</question>

<question niveau="5">
    <text>
    	Quelle méthode ne permet pas de résoudre 
	des collisions dans une table de chainage :
    </text>
    <reponse rep="false">
    	l'adressage ouvert
    </reponse>
        <reponse rep="false">
    	chaînage des clés qui ont le même hachage
    </reponse>
        <reponse rep="true">
    	suppression des éléments déjà présents
    </reponse>
</question>

<question niveau="5">
    <text>
    	la priorité d'un code est d'être :
    </text>
    <reponse rep="false">
    	optimisé
    </reponse>
        <reponse rep="true">
    	maintenable
    </reponse>
        <reponse rep="false">
    	lisible
    </reponse>
</question>

<question niveau="5">
    <text>
    	Ce code est il optimisé for (i=10; i > 5; i--) {int a=4+i;}
    </text>
    <reponse rep="false">
    	oui
    </reponse>
        <reponse rep="true">
    	non
    </reponse>
        <reponse rep="false">
    	on ne peut pas savoir
    </reponse>
</question>

<question niveau="5">
    <text>
n ←− taille du tableau\n
Si n > 2
  Pour i allant de 2 à n
    tmp ←− tableau[i]
	 j ←− i
	 ???
	   tableau[j] ←− tableau[j-1]
	   j ←− j − 1
	 tableau[j] ←− tmp
sortir : tableau
    </text>
    <reponse rep="true">
        (a) Tant que j ≥ 2 et tableau[j − 1] > tmp
    </reponse>
        <reponse rep="false">
        (b) Tant que j ≤ i et tableau[j − 1] > tmp
    </reponse>
        <reponse rep="false">
        (c) Pour j allant de 1 à n
    </reponse>
        <reponse rep="false">
        (d) Pour j allant de 2 à i
    </reponse>
</question>

</questions>